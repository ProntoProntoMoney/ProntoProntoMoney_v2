{"version":3,"sources":["../../src/pages/modal-bankaccount/modal-bankaccount.module.ts","../../src/pages/modal-bankaccount/modal-bankaccount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACW;AACL;AActD,IAAa,0BAA0B;IAAvC;IAAyC,CAAC;IAAD,iCAAC;AAAD,CAAC;AAA7B,0BAA0B;IAZtC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,gFAAoB;SACrB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,gFAAoB,CAAC;YAC9C,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAC;YACN,gFAAoB;SACrB;KACF,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACjBG;AACoC;AAC5B;AACE;AACJ;AACO;AACxB;AAC/B;;;;;;GAMG;AAOH,IAAa,oBAAoB;IAE/B,8BAAmB,OAAsB,EAAS,SAAoB,EAAS,UAAkB,EAAQ,SAAyB,EACzH,GAAO,EAAQ,YAAsB,EAAS,IAAmB,EAAS,gBAAkC;QADlG,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,eAAU,GAAV,UAAU,CAAQ;QAAQ,cAAS,GAAT,SAAS,CAAgB;QACzH,QAAG,GAAH,GAAG,CAAI;QAAQ,iBAAY,GAAZ,YAAY,CAAU;QAAS,SAAI,GAAJ,IAAI,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;IACrH,CAAC;IAGD,8CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK;IAClC,CAAC;IAED,sCAAO,GAAP;QACE,IAAM,IAAI,GAAG;YACX,SAAS,EAAG,EAAE;SACf,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,4CAAa,GAAb,UAAc,WAAW;QACvB,EAAE,CAAC,CAAC,WAAW,IAAI,EAAG,CAAC,CACvB,CAAC;YACC,IAAI,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,oBAAoB;gBAC3B,QAAQ,EAAE,qCAAqC;gBAC/C,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,OAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAO,WAAW,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,qCAAM,GAAN,UAAO,aAAa;QAElB,EAAE,CAAC,CAAC,aAAa,IAAI,EAAI,CAAC,CAC1B,CAAC;YACC,IAAI,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,oBAAoB;gBAC3B,QAAQ,EAAE,sDAAsD;gBAChE,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,OAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,aAAa,CAAC;YAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IAEH,CAAC;IACH,2BAAC;AAAD,CAAC;AArDY,oBAAoB;IAJhC,wEAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;OACG;KACtC,CAAC;gNAG4B,+EAAiC,EAAqE;QACrH,GAAG,EAAqB,SAAS,EAAc,CAAyD;AAkDtH;SArDY,oBAAoB,gB","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ModalBankaccountPage } from './modal-bankaccount';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    ModalBankaccountPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ModalBankaccountPage),\n    TranslateModule.forChild()\n  ],\n  exports:[\n    ModalBankaccountPage\n  ]\n})\nexport class ModalBankaccountPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal-bankaccount/modal-bankaccount.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams ,App,ViewController} from 'ionic-angular';\nimport { NewWire } from '../../Providers/globals';\nimport { SendMoney } from '../../Providers/globals';\nimport { AlertController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport 'rxjs/add/operator/map';\n/**\n/**\n * Generated class for the ModalBankaccountPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-modal-bankaccount',\n  templateUrl: 'modal-bankaccount.html',\n})\nexport class ModalBankaccountPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,private ptrNewWire:NewWire,public alertCtrl:AlertController,\n    public app:App,public ptrSendMoney:SendMoney,private View:ViewController, public translateService: TranslateService) {\n  }\n\n\n  ionViewWillLoad(){\n    this.ptrNewWire.typeAcId = 'SAV'\n  }\n  \n  onClose(){\n    const data = {\n      Bank_code : ''\n    };\n    this.View.dismiss(data);\n  } \n\n  onSaveChecked(typeAccount){\n    if (typeAccount == '' )\n    {\n      let alert = this.alertCtrl.create({\n        title: 'datos obligatorios',\n        subTitle: 'datos de typoe account obligatorios',\n        buttons: ['OK']\n      });\n      alert.present();\n    }\n    else\n    {\n      this.ptrNewWire.typeAcId     = typeAccount; \n    }   \n  }\n\n  onSave(accountNumber){\n    \n    if (accountNumber == ''  )\n    {\n      let alert = this.alertCtrl.create({\n        title: 'datos obligatorios',\n        subTitle: 'datos de account number y typoe account obligatorios',\n        buttons: ['OK']\n      });\n      alert.present();\n    }\n    else\n    {\n      this.ptrNewWire.payermethod = 'DEP';\n      this.ptrNewWire.BankAcNumber = accountNumber;      \n      this.onClose();\n    }  \n  \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal-bankaccount/modal-bankaccount.ts"],"sourceRoot":""}